// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  age            Int
  name           String
  email          String          @unique
  role           Role            @default(USER)
  isAdmin        Boolean         @default(false)
  writtenPosts   Post[]          @relation("writtenPost")
  favouritePosts Post[]          @relation("FavoritePosts")
  userPreference UserPreference? // This is not an actual field in the database, but a relation to the UserPreference model
  // One to One relationshipo
  // and age together
  // @@id([age, name], name: "age_name_index") // This is a composite index, it's a combination of 2 fields

  // @@unique([age, name]) // block level attribute, this makes sure there can't be 2 person with both same name
  // @@index([email])
}

model UserPreference {
  id           Int     @id @default(autoincrement())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String  @unique // for one to one relationship, the field must be unique
}

model Post {
  id            Int        @id @default(autoincrement())
  averageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("writtenPost", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String
  categories    Category[] // many to many relationshipo
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] // many to many relationship
}

enum Role {
  USER
  ADMIN
}
